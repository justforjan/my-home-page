name: Build MyWebsite

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  GITHUB_REGISTRY: ghcr.io
  DOCKER_IMAGE: ${{ github.repository }}


jobs:

  build:
    name: build and publish image
    runs-on: ubuntu-latest

    steps:
      - name: checkout the repo
        uses: actions/checkout@v4

      - name:  log into container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GITHUB_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GH_ACCESS_TOKEN }}

      - name: extract the metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.GITHUB_REGISTRY }}/justforjan/my-home-page
          tags: latest

      - name: build and push docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    name: deploy image
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Copy docker-compose.yml to VPS
        run: |
            scp -o StrictHostKeyChecking=no docker-compose.yml ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:${{ secrets.WORK_DIR }}

      - name: Set up SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy Application
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
            cd ${{ secrets.WORK_DIR }}
            docker compose pull
            docker compose up -d --remove-orphans
            exit
          EOF

      - name: Cleanup SSH Key
        run: rm -rf ~/.ssh
      
      
          
          
          
          
